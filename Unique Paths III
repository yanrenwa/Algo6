def uniqueWeightedPaths(self, grid):
        # write your codes here
        n=len(grid)
        m=len(grid[0])
        if n == 0 or m == 0:
            return 0
        s=[[set() for _ in range(m)] for __ in range(n)]
        s[0][0].add(grid[0][0])
        for i in range(n):
            for j in range(m):
                if i==0 and j==0:
                    s[i][j].add(grid[i][j])
                else:
                    for val in s[i-1][j]:
                        s[i][j].add(val+grid[i][j])
                    for val in s[i][j-1]:
                        s[i][j].add(val+grid[i][j])
        ans=0
        for val in s[-1][-1]:
            ans+=val
        return ans
